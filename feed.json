{
    "version": "https://jsonfeed.org/version/1",
    "title": "XYZ",
    "description": "",
    "home_page_url": "https://xyz-fbw.github.io",
    "feed_url": "https://xyz-fbw.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "XYZ"
    },
    "items": [
        {
            "id": "https://xyz-fbw.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html",
            "url": "https://xyz-fbw.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html",
            "title": "高中小高考Python复习提纲",
            "summary": "程序运行逻辑 在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。 示例程序： def output(): print(&quot;Hello&quot;) return output() 执行结果： Hello 程序分析： def为用户定义函数。Python模糊主函数概念，用户定义函数在定义之后才可引用。&hellip;",
            "content_html": "<h2 id=\"程序运行逻辑\">程序运行逻辑</h2>\n<p>在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。</p><hr>\n<p><em><strong>示例程序</strong></em>：</p><pre><code class=\"language-python\">def output():\n    print(&quot;Hello&quot;)\n    return\n\noutput()\n</code></pre>\n<p>执行结果：</p><pre><code class=\"language-python\">Hello\n</code></pre>\n<hr>\n<p><em><strong>程序分析</strong></em>：</p><p><strong>def为用户定义函数</strong>。<strong>Python模糊主函数概念</strong>，用户定义函数在定义之后才可引用。</p><h2 id=\"输出hello-worldprint函数\">输出Hello World——Print函数</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">print(&quot;Hello&quot;)\n</code></pre>\n<p>执行结果：</p><pre><code class=\"language-python\">Hello\n</code></pre>\n<hr>\n<p><em><strong>程序分析</strong></em></p><p><strong>print</strong>，打印函数，用于输出字符，数据变量等信息  <em>弱化int，char等变量</em></p><hr>\n<p><strong>Print函数语法格式</strong></p><p>输出规定字符，文字等内容</p><pre><code class=\"language-python\">print(&quot;Hello&quot;)\nprint(&quot;12345&quot;)\nprint(&quot;你好&quot;)\n</code></pre>\n<p>输出变量值等内容</p><pre><code class=\"language-python\">x = 10\nprint(x)\n</code></pre>\n<p><strong>混合一下</strong>（输出输入的值——input函数）</p><pre><code class=\"language-python\">x = input(&quot;Please input a number&quot;)\nprint(&quot;Your input number is&quot;,x)\n</code></pre>\n<hr>\n<h2 id=\"输入字符，数字等input函数\">输入字符，数字等——input函数</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">x = input(&quot;Please input&quot;)\nprint(&quot;Your input is&quot;,x)\n</code></pre>\n<p><em><strong>程序分析</strong></em></p><ol>\n<li>程序运行逻辑是本身为主函数（Python中不强调主函数概念——既可以面向对象又可以面向过程）</li>\n<li>无需分析输入的数值类型（Python中弱化int char等概念）</li>\n</ol>\n<hr>\n<h2 id=\"判断语句ifelse\">判断语句——if……else……</h2>\n<p><em><strong>示例程序</strong></em></p><p><strong>标准语句</strong></p><pre><code class=\"language-python\">x = input(&quot;Please input a number&quot;)\nif x == 1:\n    print(&quot;You are right&quot;)\nelse:\n    print(&quot;Maybe there is something Wrong&quot;)\n</code></pre>\n<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><strong>添加elif</strong></p><pre><code class=\"language-python\">x = input(&quot;Please input a number&quot;)\nif x == 1:\n    print(&quot;You are right&quot;)\nelif x == 2:\n    print(&quot;Maybe you are right&quot;)\nelse:\n    print(&quot;Maybe there is something Wrong&quot;)\n</code></pre>\n<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><code>输入2：输出 Maybe you are right</code></p><p><em><strong>程序解读</strong></em></p><p>程序的运行方式</p><ul>\n<li>满足if的条件，执行下方内容</li>\n<li>不满足if,但是满足elif,执行elif，执行elif下方语句</li>\n<li>不满足，执行else下方内容</li>\n</ul>\n<p><em><strong>语句语法格式</strong></em></p><pre><code class=\"language-python\">if 判断条件:\n    执行内容\nelif 判断条件:\n    执行内容\nelse:\n    执行内容\n</code></pre>\n<hr>\n<h2 id=\"重复执行语句while\">重复执行语句——while……</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">x = 0\n\nwhile x != 1:\n    x = input(&quot;input a number&quot;)\n    print(x)\n\nprint(&quot;right&quot;)\n</code></pre>\n<p><em><strong>程序解读</strong></em></p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：重新输入</code></p><p><em><strong>语句语法格式</strong></em></p><pre><code class=\"language-python\">while 判断条件(一般为相反):\n    执行内容\n</code></pre>\n<p><strong>提升</strong>\n类似do……while……</p><pre><code class=\"language-python\">secret_word = &quot;python&quot;\ncounter = 0\n\nwhile True:\n    word = input(&quot;Enter the secret word: &quot;).lower()\n    counter = counter + 1\n    if word == secret_word:\n        break\n    if word != secret_word and counter &gt; 7: \n        break\n</code></pre>\n",
            "image": "https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg",
            "author": {
                "name": "XYZ"
            },
            "tags": [
                   "学习笔记"
            ],
            "date_published": "2024-11-03T20:48:51+08:00",
            "date_modified": "2024-11-03T20:54:19+08:00"
        }
    ]
}
