<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>The Blog Of XYZ</title>
    <link href="https://xyz-fbw.github.io/feed.xml" rel="self" />
    <link href="https://xyz-fbw.github.io" />
    <updated>2024-10-19T10:52:08+08:00</updated>
    <author>
        <name>XYZ</name>
    </author>
    <id>https://xyz-fbw.github.io</id>

    <entry>
        <title>Ubuntu24.04.1 LTS    重命名输入框无法输入中文</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/ubuntu24041-lts-chong-ming-ming-shu-ru-kuang-wu-fa-shu-ru-zhong-wen.html"/>
        <id>https://xyz-fbw.github.io/ubuntu24041-lts-chong-ming-ming-shu-ru-kuang-wu-fa-shu-ru-zhong-wen.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/9/Screenshot-from-2024-10-19-10-41-03-2.png" medium="image" />
            <category term="Discoveries"/>

        <updated>2024-10-19T10:51:30+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/9/Screenshot-from-2024-10-19-10-41-03-2.png" alt="" />
                    例如下方场景是如下情况 方法如下 配置fctix输入法框架环境变量（个人使用vim作为文本编辑器i） sudo vim ~/.pam_environment 输入以下内容 GTK_IM_MODULE=ibus QT_IM_MODULE=ibus XMODIFIERS=@im=ibus 保存并退出。 注销或重启后即可输入中文
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/9/Screenshot-from-2024-10-19-10-41-03-2.png" class="type:primaryImage" alt="" /></p>
                <h1>例如下方场景是如下情况</h1>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/9/Screenshot-from-2024-10-19-10-41-03.png" alt="" width="890" height="553" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/9/responsive/Screenshot-from-2024-10-19-10-41-03-xs.png 384w ,https://xyz-fbw.github.io/media/posts/9/responsive/Screenshot-from-2024-10-19-10-41-03-sm.png 600w ,https://xyz-fbw.github.io/media/posts/9/responsive/Screenshot-from-2024-10-19-10-41-03-md.png 768w ,https://xyz-fbw.github.io/media/posts/9/responsive/Screenshot-from-2024-10-19-10-41-03-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/9/responsive/Screenshot-from-2024-10-19-10-41-03-xl.png 1600w"></figure>
<h1><span style="color: #ba372a;">方法如下</span></h1>
<p data-pid="Q665PRgS">配置fctix输入法框架环境变量（个人使用vim作为文本编辑器i）</p>
<div class="highlight">
<pre><code class="language-text">sudo vim ~/.pam_environment</code></pre>
</div>
<p data-pid="cXqBa-52">输入以下内容</p>
<div class="highlight">
<pre><code class="language-text">GTK_IM_MODULE=ibus
QT_IM_MODULE=ibus
XMODIFIERS=@im=ibus</code></pre>
</div>
<p data-pid="N0ZFm9oa">保存并退出。</p>
<h1 data-pid="N0ZFm9oa"><span style="color: #ba372a;">注销或重启后即可输入中文</span></h1>
            ]]>
        </content>
    </entry>
    <entry>
        <title>FydeOS Linux虚拟机使用</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/fyde-os-linuxxu-ni-ji-shi-yong.html"/>
        <id>https://xyz-fbw.github.io/fyde-os-linuxxu-ni-ji-shi-yong.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/8/v2-8fa162afd340ade844adfb3bd252b791_720w.png" medium="image" />
            <category term="Linux"/>

        <updated>2024-10-18T18:58:25+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/8/v2-8fa162afd340ade844adfb3bd252b791_720w.png" alt="" />
                    很多国内好用多Debian系软件都在Deepin的商店中，那么在Fyde OS Debian11虚拟机如何去安装星火商店。 1.星火商店本体安装包（根据CPU架构自行选择）和依赖包 在选择分配空间是最好使用默认大小，如果需要的软件较多可以自行选择更大空间。 在虚拟机打开后会出现如下界面 此时即可安装软件，首先安装编辑软件源所需的编译器，我选择nano sudo apt install nano 然后用nano打开软件源 sudo nano /etc/apt/sources.list 将其中软件源全部删除换成国内Debian11软件源，我选择的是中科大的 deb https://mirrors.ustc.edu.cn/debian/ bullseye main&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/8/v2-8fa162afd340ade844adfb3bd252b791_720w.png" class="type:primaryImage" alt="" /></p>
                <p data-first-child="" data-pid="rZdPHGtL">很多国内好用多Debian系软件都在Deepin的商店中，那么在Fyde OS Debian11<a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=237031776&amp;content_type=Article&amp;match_order=1&amp;q=%E8%99%9A%E6%8B%9F%E6%9C%BA&amp;zhida_source=entity" target="_blank" rel="noopener">虚拟机<svg width="10px" height="10px" viewbox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor" data-darkreader-inline-fill=""><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a>如何去安装星火商店。</p>
<h2>准备材料：</h2>
<p data-pid="ubQHG5sW">1.星火商店本体<a href="https://link.zhihu.com/?target=https%3A//spark-app.store/download_latest" class=" wrap external" target="_blank" rel="nofollow noopener noreferrer" data-za-detail-view-id="1043">安装包</a>（根据CPU架构自行选择）和<a href="https://link.zhihu.com/?target=https%3A//spark-app.store/download_dependencies_latest" class=" wrap external" target="_blank" rel="nofollow noopener noreferrer" data-za-detail-view-id="1043">依赖包</a></p>
<h2>步骤：</h2>
<h3>1.如图，打开Linux环境</h3>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/8/v2-0a82761bccf4c9e6e207a389529465f9_720w.png" alt="" width="720" height="388" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/8/responsive/v2-0a82761bccf4c9e6e207a389529465f9_720w-xs.png 384w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0a82761bccf4c9e6e207a389529465f9_720w-sm.png 600w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0a82761bccf4c9e6e207a389529465f9_720w-md.png 768w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0a82761bccf4c9e6e207a389529465f9_720w-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0a82761bccf4c9e6e207a389529465f9_720w-xl.png 1600w"></figure>
<p data-pid="7vFAWyk1">在选择分配空间是最好使用默认大小，如果需要的软件较多可以自行选择更大空间。</p>
<h3>2.更换软件源</h3>
<p data-pid="eNXLLh1k">在虚拟机打开后会出现如下界面</p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/8/v2-0949a95fa118c84ad4141949d237282a_720w.png" alt="" width="650" height="482" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/8/responsive/v2-0949a95fa118c84ad4141949d237282a_720w-xs.png 384w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0949a95fa118c84ad4141949d237282a_720w-sm.png 600w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0949a95fa118c84ad4141949d237282a_720w-md.png 768w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0949a95fa118c84ad4141949d237282a_720w-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-0949a95fa118c84ad4141949d237282a_720w-xl.png 1600w"></figure>
<p data-pid="wXziep2d">此时即可安装软件，首先安装编辑软件源所需的编译器，我选择nano</p>
<div class="highlight">
<pre><code class="language-text">sudo apt install nano</code></pre>
</div>
<p data-pid="CH0P4vhT">然后用nano打开软件源</p>
<div class="highlight">
<pre><code class="language-text">sudo nano /etc/apt/sources.list</code></pre>
</div>
<p data-pid="g2JSKaIF">将其中软件源全部删除换成国内Debian11软件源，我选择的是中科大的</p>
<div class="highlight">
<pre><code class="language-text">deb https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free
deb-src https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free

deb https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free
deb-src https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free

deb https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free
deb-src https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free

deb https://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free
deb-src https://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</code></pre>
</div>
<p data-pid="eC4ATDyQ">Ctrl+O保存后，Ctrl+X退出。重启Fyde OS。</p>
<p data-pid="XbFhtg3L">重启后，重新开启虚拟机，并更新软件源和软件</p>
<div class="highlight">
<pre><code class="language-text">sudo apt-get update
sudo apt-get upgrade</code></pre>
</div>
<h3>3.安装系统软件</h3>
<h3>首先安装文件管理器和终端，我是用xfce的</h3>
<div class="highlight">
<pre><code class="language-text">sudo apt install thunar
sudo apt install xfce4-terminal</code></pre>
</div>
<p data-pid="YAJ06mvj">将下载目录与Debian 11共享</p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/8/v2-54e7914c1eac9d586ff6b7f13111f55e_720w.webp" alt="" width="452" height="649" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/8/responsive/v2-54e7914c1eac9d586ff6b7f13111f55e_720w-xs.webp 384w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-54e7914c1eac9d586ff6b7f13111f55e_720w-sm.webp 600w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-54e7914c1eac9d586ff6b7f13111f55e_720w-md.webp 768w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-54e7914c1eac9d586ff6b7f13111f55e_720w-lg.webp 1200w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-54e7914c1eac9d586ff6b7f13111f55e_720w-xl.webp 1600w"></figure>
<p data-pid="cSf8yxvZ">然后，为了方便使用，我们需要创建一个软链接，将下载内容目录映射到Linux用户目录下： 在Linux终端执行：</p>
<div class="highlight">
<pre><code class="language-text">ln -s /mnt/chromeos/MyFiles/Downloads ~/Downloads</code></pre>
</div>
<p data-pid="q7kWTFln">这样，即可在用户目录下直接操作"下载内容"目录。 如需其他目录，同上操作即可。</p>
<h3>4.安装星火商店</h3>
<p data-pid="cquuR09d">在星火商店打开thunar，找到共享文件夹Download，将依赖包压缩包解开，并且按照提示在Debian11目录下的sh文件选中并右键打开终端。</p>
<p data-pid="KA0iruVe">回到Download目录下，右键打开终端，输入</p>
<div class="highlight">
<pre><code class="language-text">sudo dpkg -i spark-store_4.2.9_amd64.deb</code></pre>
</div>
<p data-pid="4028wgrV">后面的包名根据自己下载的进行填写。</p>
<p data-pid="hfwBhl43">然后会出现报错无法安装的情况，这时候输入</p>
<div class="highlight">
<pre><code class="language-text">sudo apt-get install -f</code></pre>
</div>
<p data-pid="lBnQlsoz">等跑完代码后起动器中就可以看到星火商店了</p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/8/v2-48a5875189a48c58f0ebf07579f6c548_720w.png" alt="" width="636" height="683" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/8/responsive/v2-48a5875189a48c58f0ebf07579f6c548_720w-xs.png 384w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-48a5875189a48c58f0ebf07579f6c548_720w-sm.png 600w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-48a5875189a48c58f0ebf07579f6c548_720w-md.png 768w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-48a5875189a48c58f0ebf07579f6c548_720w-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/8/responsive/v2-48a5875189a48c58f0ebf07579f6c548_720w-xl.png 1600w"></figure>
<h3>5.安装QQ后，关闭窗口后QQ不会退出，可以参考这个</h3>
<h4 class="align-center"><a href="https://fydeos.com/docs/knowledge-base/linux-subsystem/linux-tray/" target="_blank" rel="noopener noreferrer"></a><a href="https://fydeos.com/docs/knowledge-base/linux-subsystem/linux-tray/" target="_blank" rel="noopener noreferrer">使用 Stalonetray 在 Linux 子系统上开启系统托盘</a></h4>
<h3>6.更换软件源时需要注意事项</h3>
<p>1.<strong>版本代号</strong>：例如，Debian 11的代号是bullseye，那在换软件源之前就要找到bullseye是Debian 11的代号，找到Debian 11的镜像源即可。<strong>在2024年Fyde OS更新之后，虚拟机的Debian版本变成12，也就是软件源变成了bookworm</strong>，更换的时候要注意区分。</p>
<p>2.<strong>强制安全更新使用镜像</strong>：这个只在Debian上会出现（如下图），建议如果不是网络状况非常不好建议不要启用，一般来说镜像站不会出错或者更新缓慢（只针对清华，中科大等高校服务器，不包括华为，阿里等企业服务器），但是如果有很强的安全性要求就建议不要开启。</p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/8/16feb477-14a9-4c8e-b03c-836555e4de7a.png" alt="" width="1664" height="971" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/8/responsive/16feb477-14a9-4c8e-b03c-836555e4de7a-xs.png 384w ,https://xyz-fbw.github.io/media/posts/8/responsive/16feb477-14a9-4c8e-b03c-836555e4de7a-sm.png 600w ,https://xyz-fbw.github.io/media/posts/8/responsive/16feb477-14a9-4c8e-b03c-836555e4de7a-md.png 768w ,https://xyz-fbw.github.io/media/posts/8/responsive/16feb477-14a9-4c8e-b03c-836555e4de7a-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/8/responsive/16feb477-14a9-4c8e-b03c-836555e4de7a-xl.png 1600w"></figure>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Debian12 + i3-wm</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/debian12i3-wmshi-yong-bao-gao-3.html"/>
        <id>https://xyz-fbw.github.io/debian12i3-wmshi-yong-bao-gao-3.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/7/v2-d2dccaf02804d261acfec44a726935e3_1440w.png" medium="image" />
            <category term="Linux"/>

        <updated>2024-10-16T21:01:42+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/7/v2-d2dccaf02804d261acfec44a726935e3_1440w.png" alt="" />
                    简介 最高效率的编码使用的桌面非常不错。 我不会用命令行安装Debian12的live版本，所以就使用耗时较长的netinst版本进行安装。 正常引导并进入，正常选择即可。在选择镜像源的时候建议选择清华的，我多次安装只有清华源每次都正常。 选择完软件源后就会出现桌面选择的界面，这里只选择最后一项，也就是标准系统工具即可。 在进入本地系统后就是类似于终端的界面，这里用户名填root，密码就是你自己设置的管理员密码，并非用户密码。 所需要的软件有： sudo（普通用户调用管理员权限） lightdm （登录管理器） i3（i3的所有软件包，只想要窗口管理器的可以选择i3-wm） Thunar / ranger（文件管理器，thunar是图形界面，ranger是命令行，自行选择即可） xfce4-terminal / Alacritty （都为终端，xfce4-terminal具有图形界面，自行选择即可） rofi（图形化drun） picom（轻量级窗口管理特效的首选）&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/7/v2-d2dccaf02804d261acfec44a726935e3_1440w.png" class="type:primaryImage" alt="" /></p>
                <h1>简介</h1>
<p>最高效率的编码使用的桌面非常不错。</p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/7/v2-d2dccaf02804d261acfec44a726935e3_720w.png" alt="" width="720" height="405" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/7/responsive/v2-d2dccaf02804d261acfec44a726935e3_720w-xs.png 384w ,https://xyz-fbw.github.io/media/posts/7/responsive/v2-d2dccaf02804d261acfec44a726935e3_720w-sm.png 600w ,https://xyz-fbw.github.io/media/posts/7/responsive/v2-d2dccaf02804d261acfec44a726935e3_720w-md.png 768w ,https://xyz-fbw.github.io/media/posts/7/responsive/v2-d2dccaf02804d261acfec44a726935e3_720w-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/7/responsive/v2-d2dccaf02804d261acfec44a726935e3_720w-xl.png 1600w"></figure>
<h1> </h1>
<h3>Debian12的安装</h3>
<p>我不会用命令行安装Debian12的live版本，所以就使用耗时较长的netinst版本进行安装。</p>
<h1> </h1>
<h3>镜像下载与写入</h3>
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="frbqm-0-0">
<div class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr" data-offset-key="frbqm-0-0"><span data-offset-key="frbqm-0-0">点击</span><a href="https://www.debian.org/index.zh-cn.html" target="_blank" rel="noopener noreferrer"><span data-offset-key="frbqm-1-0">此链接</span></a><span data-offset-key="frbqm-2-0">即可下载镜像。</span></div>
<div data-offset-key="frbqm-0-0"> </div>
</div>
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="ej3pn-0-0"><span data-offset-key="ej3pn-0-0">在Windows系统上，</span><span data-offset-key="ej3pn-0-1">使用Rufus工具写入，此为标准版</span><a data-offset-key="ej3pn-1-0" data-editable="true" target="_blank" href="https://github.com/pbatard/rufus/releases/download/v4.5/rufus-4.5.exe" class="Link ztext-link" rel="noopener"><span data-offset-key="ej3pn-1-0">下载链接</span></a><span data-offset-key="ej3pn-2-0">。在Linux和Windows系统都可以使用的是ventoy，</span><a data-offset-key="ej3pn-3-0" data-editable="true" target="_blank" href="https://www.lanzoui.com/i5ETa219q9qj" class="Link ztext-link" rel="noopener"><span data-offset-key="ej3pn-3-0">Windows下载</span></a> <a data-offset-key="ej3pn-5-0" data-editable="true" target="_blank" href="https://www.lanzoui.com/iIzVH219q9dg" class="Link ztext-link" rel="noopener"><span data-offset-key="ej3pn-5-0">Linux下载</span></a></div>
<div data-block="true" data-editor="4afeu" data-offset-key="ej3pn-0-0"> </div>
<div data-block="true" data-editor="4afeu" data-offset-key="ej3pn-0-0">如果电脑不可以使用，手边正好有一部安卓手机的可以尝试<a href="https://link.zhihu.com/?target=http%3A//x1.ydyspc.com/etchdroid.apk" class=" wrap external" target="_blank" rel="nofollow noopener noreferrer" data-za-detail-view-id="1043">下载EtchDroid</a>，在手机上写镜像。</div>
<div data-block="true" data-editor="4afeu" data-offset-key="ej3pn-0-0">
<h3 id="h_704256164_3" data-into-catalog-status="">Debian12网络安装与注意事项</h3>
<p data-pid="66-lHWwa">正常引导并进入，正常选择即可。在选择镜像源的时候建议选择清华的，我多次安装只有清华源每次都正常。</p>
<p data-pid="yh0qXKnG">选择完软件源后就会出现桌面选择的界面，这里只选择最后一项，也就是标准系统工具即可。</p>
<h2 id="h_704256164_4" data-into-catalog-status="">i3-wm的安装与配置</h2>
<p data-pid="Lh6_JwnH">在进入本地系统后就是类似于终端的界面，这里<strong><i>用户名填root</i></strong>，密码就是你自己设置的<strong>管理员密码</strong>，<strong>并非用户密码</strong>。</p>
<h3 id="h_704256164_5" data-into-catalog-status="">安装</h3>
<p data-pid="q9cce39n">所需要的软件有：</p>
<p data-pid="RW3XYmXf">sudo（普通用户调用管理员权限）</p>
<p data-pid="1xAv1FjT">lightdm （登录管理器）</p>
<p data-pid="mkiqqkDX">i3（i3的所有软件包，只想要窗口管理器的可以选择i3-wm）</p>
<p data-pid="uyoH4N7_">Thunar / ranger（文件管理器，thunar是图形界面，ranger是命令行，自行选择即可）</p>
<p data-pid="OckmML5A">xfce4-terminal / Alacritty （都为终端，xfce4-terminal具有图形界面，自行选择即可）</p>
<p data-pid="GW0X1wXS">rofi（图形化drun）</p>
<p data-pid="ltmUQHjf">picom（轻量级窗口管理特效的首选）</p>
<p data-pid="__MpH0ST">i3-gaps （i3窗口界面，安装i3的直接跳过即可，只安装i3-wm的需要安装）</p>
<p data-pid="6_p20IYg">i3lock（i3锁屏界面，自行选择是否安装。安装i3的自带）</p>
<p data-pid="G5KNDtox">i3stauts（i3bar中显示时间，电量等信息的小组件。安装i3自带）</p>
<p data-pid="vUaYNdPY">network-manager-gnome（gnome网络管理器，用于切换WiFi网络）</p>
<p data-pid="FGGixe3P">xfce4-power-manager（电源管理器）</p>
<p data-pid="3Pak9fEZ">blueman（蓝牙管理器）</p>
<p data-pid="BHFfGq4D">volumeicon-alsa（声音控制）</p>
<p data-pid="I4X3gxGn">lxappearance（界面外观更换）</p>
<p data-pid="Pqi2bCYl">feh（更换壁纸工具）</p>
<hr>
<p data-pid="vGXEmESK">只需要输入：</p>
<pre class="highlight"><code class="language-text">apt install sudo lightdm i3 ranger alacritty rofi  picom network-manager-gnome xfce4-power-manager blueman volumeicon-alsa lxappearance feh</code></pre>
<p data-pid="EJJmkxYu">普通用户使用sudo</p>
<div class="highlight">
<pre><code class="language-text">sudo usermod -aG sudo username </code></pre>
</div>
<p data-pid="KpvN8bnW">执行完成后输入重启命令即可</p>
<div class="highlight">
<pre><code class="language-text">reboot</code></pre>
</div>
<p data-pid="oVl90ULb">可在i3配置中更换快捷键对应操作。</p>
<h3 id="h_704256164_6" data-into-catalog-status="">i3的常用快捷键</h3>
<p data-pid="V-Z6y1uf">刚进桌面时会让你选择快捷键的Mod键是<strong>Windows徽标键</strong>或<strong>Ctrl键</strong>，自行选择即可。</p>
<p class="ztext-empty-paragraph"> </p>
<p data-pid="6j92naKG">$mod + Enter 启动虚拟终端</p>
<p data-pid="-z8HFj24">$mod + A 焦点转义到父窗口上</p>
<p data-pid="GXZ3DR3I">$mod + S 堆叠布局</p>
<p data-pid="8-uEao-Z">$mod + W 标签布局</p>
<p data-pid="sWxkrfk4">$mod + E 默认布局 连续按下 可以从 纵向排列和竖向排列之间 来回切换</p>
<p data-pid="dn8du05z">$mod + SpaceBar 焦点在平铺式／浮动式转换</p>
<p data-pid="2yaubsvP">$mod + Shift + SpaceBar 窗口在平铺式／浮动式转换</p>
<p data-pid="XvKNKL0D">$mod + shift + &lt;数字键&gt; 将当前程序发送到指定window</p>
<p data-pid="6wWbPSw7">$mod + &lt;方向键&gt; 移动鼠标到焦点</p>
<p data-pid="Yj-meOMj">$mod + shift + &lt;方向键&gt; 移动窗口位置</p>
<p data-pid="TLPtgVX6">$mod + D 启动 dmenu</p>
<p data-pid="384zGp0M">$mod + H 水平分割窗口</p>
<p data-pid="iKiQP8LQ">$mod + V 垂直分割窗口</p>
<p data-pid="VYHxFJCF">$mod + J 焦点往左窗口移</p>
<p data-pid="igSvOgza">$mod + K 焦点往下窗口移</p>
<p data-pid="GVzfWocE">$mod + L 焦点往上窗口移</p>
<p data-pid="qd5eRv4v">$mod + ; 焦点往右窗口移</p>
<p data-pid="IHZJJWzR">$mod + Shift + Q 杀死当前窗口的进程</p>
<p data-pid="ZFaz2SYo">$mod + Shift + E 退出 i3</p>
<p data-pid="sFMphuOr">$mod + Shift + C 当场重新加载 i3config, 无需重启</p>
<p data-pid="-mDtmcyo">$mod + Shift + R 重启 i3 （还重新加载了 i3config, 又没有退出过程）</p>
<p data-pid="p3TiQDd2">$mod + Shift + J 窗口左移 等同于 $mod + shift + &lt;方向键&gt;</p>
<p data-pid="dk2KotdK">$mod + Shift + K 窗口下移 等同于 $mod + shift + &lt;方向键&gt;</p>
<p data-pid="oueU7KOw">$mod + Shift + L 窗口上移 等同于 $mod + shift + &lt;方向键&gt;</p>
<p data-pid="xRCYHHUI">$mod + Shift + : 窗口右移 等同于 $mod + shift + &lt;方向键&gt;</p>
<p data-pid="6Up-WvgS">$mod + &lt;数字键&gt; 切换window</p>
<p data-pid="1Db8y66m">$mod + F 焦点窗口全屏</p>
<p data-pid="1Db8y66m"> </p>
<p data-pid="oVl90ULb">可在i3配置中更换快捷键对应操作</p>
<h3 id="h_704256164_7" data-into-catalog-status="">i3的配置与配置文件</h3>
<p data-pid="P0Ryjuyy">配置文件位置在</p>
<div class="highlight">
<pre><code class="language-text">./home/username/.config/i3/config</code></pre>
</div>
<p data-pid="BktdMUup">username位置填自己的用户名即可。<strong><i>.config是隐藏文件夹，用Ctrl+H键显示。</i></strong></p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/7/1-3.png" alt="" width="666" height="719" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/7/responsive/1-3-xs.png 384w ,https://xyz-fbw.github.io/media/posts/7/responsive/1-3-sm.png 600w ,https://xyz-fbw.github.io/media/posts/7/responsive/1-3-md.png 768w ,https://xyz-fbw.github.io/media/posts/7/responsive/1-3-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/7/responsive/1-3-xl.png 1600w"></figure>
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="fto88-0-0">
<div data-offset-key="fto88-0-0">
<p data-pid="fW0BZmGt">将这几条添加进去即可</p>
<div class="highlight">
<pre><code class="language-text">exec --no-startup-id fcitx
exec --no-startup-id xfce4-power-manager
exec --no-startup-id volumeicon
exec --no-startup-id blueman
exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
new_window none
new_float none
hide_edge_borders both #隐藏窗口边框
gaps inner 8
gaps outer 6</code></pre>
</div>
<code></code></div>
</div>
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="43im-0-0">
<div class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr" data-offset-key="43im-0-0"><span data-offset-key="43im-0-0">更改dmenu</span></div>
<div data-offset-key="43im-0-0"><figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/7/2.png" alt="" width="720" height="40" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://xyz-fbw.github.io/media/posts/7/responsive/2-xs.png 384w ,https://xyz-fbw.github.io/media/posts/7/responsive/2-sm.png 600w ,https://xyz-fbw.github.io/media/posts/7/responsive/2-md.png 768w ,https://xyz-fbw.github.io/media/posts/7/responsive/2-lg.png 1200w ,https://xyz-fbw.github.io/media/posts/7/responsive/2-xl.png 1600w"></figure></div>
<div data-offset-key="43im-0-0">
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="62ndv-0-0">
<div class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr" data-offset-key="62ndv-0-0"><span data-offset-key="62ndv-0-0">mod + Shift + R 重启 i3 </span></div>
</div>
<figure class="Editable-styled"  data-block="true" data-editor="4afeu" data-offset-key="a0fv1-0-0">
<div class="Editable-divider FocusPlugin--unfocused"><hr></div>
</figure>
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="44nv-0-0"> </div>
<div class="Editable-unstyled" data-block="true" data-editor="4afeu" data-offset-key="cn5m9-0-0">
<div class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr" data-offset-key="cn5m9-0-0">
<p data-pid="gKNhqjC-">picom窗口合成器配置透明窗口和渐变动画</p>
<p data-pid="OzMG_F4_">文件位置（如果没有新建即可）：</p>
<div class="highlight">
<pre><code class="language-text">./home/username/.config/picom.conf</code></pre>
</div>
<p data-pid="PEvEEWyx">这是我的配置文件:</p>
<div class="highlight">
<pre><code class="language-text">#################################
#             Shadows           #
#################################


# 在 Windows 上启用客户端阴影。注意桌面窗口
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') 永远不会有阴影，
# 除非使用 wintypes 选项明确要求。
#
# shadow = false
shadow = false;

# 阴影的模糊半径，以像素为单位。 （默认为 12）
# shadow-radius = 12
shadow-radius = 7;

# 阴影的不透明度。 （0.0 - 1.0，默认为 0.75）
# shadow-opacity = .75

# 阴影的左偏移，以像素为单位。 （默认为 -15）
# shadow-offset-x = -15
shadow-offset-x = -7;

# 阴影的顶部偏移量，以像素为单位。 （默认为 -15）
# shadow-offset-y = -15
shadow-offset-y = -7;

# 阴影的红色值（0.0 - 1.0，默认为 0）。
# shadow-red = 0

# 阴影的绿色值（0.0 - 1.0，默认为 0）。
# shadow-green = 0

# 阴影的蓝色值（0.0 - 1.0，默认为 0）。
# shadow-blue = 0

# 阴影的十六进制字符串颜色值（#000000 - #FFFFFF，默认为#000000）。此选项将覆盖选项集阴影-（红色/绿色/蓝色）
# shadow-color = "#000000"

# 指定不应该有阴影的窗口的条件列表。
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];

# 指定不应覆盖阴影的窗口条件列表，例如停靠窗口。
# clip-shadow-above = []

# 指定一个 X 几何图形来描述不应该出现阴影的区域
# 被绘制在，比如一个停靠窗口区域。采用
# shadow-exclude-reg u003d "x10+0+0"
# 例如，如果屏幕底部的 10 个像素不应绘制阴影。
#
# shadow-exclude-reg = ""

# 在特定的 Xinerama 屏幕上将窗口的阴影完全裁剪到屏幕上。
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################


# 在打开/关闭和不透明度变化时淡入/淡出窗口，
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# 淡入时步骤之间的不透明度变化。（0.01 - 1.0，默认为 0.028）
# fade-in-step = 0.028
fade-in-step = 0.03;

# 淡出时步骤之间的不透明度变化。 （0.01 - 1.0，默认为 0.03）
# fade-out-step = 0.03
fade-out-step = 0.03;

# 淡入淡出步骤之间的时间，以毫秒为单位。 （&gt; 0，默认为 10）
# fade-delta = 10

# 指定不应褪色的窗口条件列表。
# fade-exclude = []

# 不要在窗口打开/关闭时淡入淡出。
# no-fading-openclose = false

# 不要使用 WM 框架淡化被破坏的 ARGB 窗口。解决 Openbox、Fluxbox 等中的错误。
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


# 非活动窗口的不透明度。 （0.1 - 1.0，默认为 1.0）
# inactive-opacity = 1
inactive-opacity = 0.5;

# 窗口标题栏和边框的不透明度。 （0.1 - 1.0，默认禁用）
# frame-opacity = 1.0
frame-opacity = 0.8;

# 让 -i 设置的非活动不透明度覆盖窗口的 '_NET_WM_WINDOW_OPACITY' 值。
# inactive-opacity-override = true
inactive-opacity-override = false;

# 活动窗口的默认不透明度。 （0.0 - 1.0，默认为 1.0）
active-opacity = 0.8

# 使非活动窗口变暗。 （0.0 - 1.0，默认为 0.0）
# inactive-dim = 0.0

# 指定不应该被视为焦点的窗口的条件列表。
# focus-exclude = []
focus-exclude = [ "class_g = 'Cairo-clock'" ];

# 使用固定的非活动暗度值，而不是根据窗口不透明度进行调整。
# inactive-dim-fixed = 1.0

# 指定不透明度规则列表，格式为 `PERCENT:PATTERN`,
# 像 `50:name *u003d "Firefox"`。建议使用 picom-trans。
# 请注意，我们不保证可能与其他人发生冲突
# 在框架或客户端窗口上设置“_NET_WM_WINDOW_OPACITY”的程序。
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []


#################################
#           Corners             #
#################################

# 设置圆角窗口角的半径。当 &gt; 0 时，合成器将
# 圆窗户的角落。不能很好的互动
# `transparent-clipping`.
corner-radius = 0

# 排除圆角的条件。
rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'"
];


#################################
#     Background-Blurring       #
#################################


# 背景模糊的参数，请参阅 *BLUR* 部分了解更多信息。
# blur-method =
# blur-size = 12
#
# blur-deviation = false
#
# blur-strength = 5

# 模糊半透明/ARGB 窗口的背景。
# 性能不佳，具有依赖于驱动程序的行为。
# 交换机名称可能会更改，恕不另行通知。
#
# blur-background = false

# 当窗口框架不透明时模糊窗口的背景。
# Implies:
#    blur-background
# 性能不佳，具有依赖于驱动程序的行为。名称可能会改变。
#
# blur-background-frame = false


# 使用固定的模糊强度，而不是根据窗口不透明度进行调整。
# 模糊背景固定 = 假


# 指定模糊卷积核，格式如下：
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ""
blur-kern = "3x3box";


# 排除背景模糊的条件。
# blur-background-exclude = []
blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@:c"
];

#################################
#       General Settings        #
#################################

# 守护进程。初始化后分叉到后台。导致某些（编写错误的）驱动程序出现问题。
# daemon = false

# 指定要使用的后端：`xrender`、`glx` 或 `xr_glx_hybrid`。
# `xrender` is the default one.
#
# backend = "glx"
backend = "xrender";

# 启用/禁用垂直同步。
# vsync = false
vsync = true;

# 通过 D-Bus 启用远程控制。有关详细信息，请参阅下面的 *D-BUS API* 部分。
# dbus = false

# 尝试检测 WM 窗口（一个非覆盖重定向窗口，没有
# 具有'WM_STATE'的孩子）并将它们标记为活动。
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# 标记没有以“WM_STATE”为焦点的子窗口的覆盖重定向窗口。
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# 尝试检测带有圆角的窗口并且不考虑它们
# 形状的窗户。不幸的是，准确度不是很高。
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# 在客户端窗口上检测'_NET_WM_WINDOW_OPACITY'，对窗口管理器很有用
# 不将客户端窗口的“_NET_WM_WINDOW_OPACITY”传递给框架窗口。
#
# detect-client-opacity = false
detect-client-opacity = true;

# 使用 EWMH '_NET_ACTIVE_WINDOW' 来确定当前聚焦的窗口，
# 而不是听 'FocusIn'/'FocusOut' 事件。可能精度更高，
# 前提是 WM 支持它。
#
# use-ewmh-active-win = false

# 如果检测到全屏不透明窗口，则取消重定向所有窗口，
# 最大化全屏窗口的性能。已知会导致闪烁
# 当重定向/取消重定向窗口时。
#
# unredir-if-possible = false

# 取消重定向窗口前的延迟，以毫秒为单位。默认为 0。
# unredir-if-possible-delay = 0

# 不应该被视为非重定向屏幕全屏的窗口条件。
# unredir-if-possible-exclude = []

# 使用 'WM_TRANSIENT_FOR' 对窗口进行分组，并考虑窗口
#在同一组中同时专注。
#
# detect-transient = false
detect-transient = true;

# 使用 'WM_CLIENT_LEADER' 对窗口进行分组，并考虑同一个窗口
# 小组同时聚焦。这通常意味着来自同一应用程序的窗口
# 将同时被视为专注或不专注。
# 如果启用了检测瞬态，'WM_TRANSIENT_FOR' 具有更高的优先级。
#
# detect-client-leader = false

# 将损坏区域的大小调整为特定数量的像素。
# 正值放大，负值缩小。
# 如果值为正，则不会实际绘制那些额外的像素
# 到屏幕，仅用于模糊计算等。 （由于技术限制，
# 使用损坏，这些像素仍然会错误地绘制到屏幕上。）
# 主要用于修复模糊的线路损坏问题，
# 在这种情况下你应该在这里使用模糊半径值
# （例如，对于 3x3 内核，您应该使用 `--resize-damage 1`，
# 使用 5x5 的 `--resize-damage 2`，依此类推）。
# 可能会也可能不会与 *--glx-no-stencil* 一起使用。收缩功能不正常。
#
# resize-damage = 1

# 指定应该用反转颜色绘制的窗口的条件列表。
# 资源占用，并且没有经过很好的测试。
#
# invert-color-include = []

# GLX 后端：避免使用模板缓冲区，如果您没有模板缓冲区，这很有用。
# 在渲染透明内容时可能会导致不正确的不透明度（但绝不会
# 实际上发生了）并且可能不适用于模糊背景。
# 我的测试显示性能提升了 15%。推荐的。
#
glx-no-stencil = true;

# GLX 后端：避免在窗口损坏时重新绑定像素图。
# 可能可以提高快速窗口内容更改的性能，
# 但已知会破坏某些驱动程序（LLVMpipe、xf86-video-intel 等）。
# 如果可行，推荐。
#
# glx-no-rebind-pixmap = false

# 禁用损坏信息。
# 这会导致每次重绘整个屏幕，而不是屏幕的一部分
#实际上已经改变了。可能会降低性能，但可能会修复一些伪影。
# 对立的选项是使用伤害
#
# no-use-damage = false
use-damage = true;

# 使用 X Sync fence 来同步客户端的draw call，确保所有draw
# 调用在 picom 开始绘制之前完成。需要 nvidia 驱动程序
# 为某些用户使用 GLX 后端。
#
# xrender-sync-fence = false

# GLX 后端：使用指定的 GLSL 片段着色器来渲染窗口内容。
# 参见 `compton-default-fshader-win.glsl` 和 `compton-fake-transparency-fshader-win.glsl`
# 在源代码树中作为示例。
#
# glx-fshader-win = ""

# 强制所有窗口使用混合进行绘制。如果你有用
# 有一个 glx-fshader-win 可以把不透明的像素变成透明的。
#
# force-win-blend = false

# 不要使用 EWMH 检测全屏窗口。
# 恢复为仅根据其大小和坐标检查窗口是否为全屏。
#
# no-ewmh-fullscreen = false

# 调暗明亮的窗户，使其亮度不超过此设定值。
# 窗口的亮度是通过平均窗口中的所有像素来估计的，
# 所以这可能会带来性能损失。
# 将此设置为 1.0 会禁用此行为。需要禁用 --use-damage。 （默认值：1.0）
#
# max-brightness = 1.0

# 让透明窗口像非透明窗口一样剪辑其他窗口，
# 而不是在它们之上混合。
#
# transparent-clipping = false

# 设置日志级别。可能的值为：
#  "trace", "debug", "info", "warn", "error"
# 越来越重要。大小写无关紧要。
# 如果使用“TRACE”日志级别，最好登录到文件中
# 使用 *--log-file*，因为它可以生成大量日志。
#
# log-level = "debug"
log-level = "warn";

# 设置日志文件。
# 如果 *--log-file* 从未指定，日志将被写入标准错误。
# 否则，日志将写入给定文件，尽管一些早期的
# 日志可能仍会写入标准错误。
# 从配置文件中设置此选项时，建议使用绝对路径。
#
# log-file = "/path/to/your/log/file"

# 显示所有 X 错误（用于调试）
# show-all-xerrors = false

# 将进程 ID 写入文件。
# write-pid-path = "/path/to/your/log/file"

# 窗口类型设置
#
# 'WINDOW_TYPE' 是 EWMH 标准中定义的 15 种窗口类型之一：
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# 以下每个窗口类型选项可用：::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls wether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = false; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};</code></pre>
</div>
</div>
</div>
<div class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr" data-offset-key="3mnp4-0-0">
<h3 id="h_704256164_11" data-into-catalog-status="">Alacritty</h3>
<p data-pid="do28oqEu">配置文件的位置在/home/username/.config/alacritty/alacritty.yml（若不存在可自行创建）</p>
<p data-pid="xVQjogG4">下面是我的配置，使用前要安装JetBrains Mono字体</p>
<div class="highlight">
<pre><code class="language-bash"><span class="c1"># Colors (Aura Theme)</span>
colors:
  <span class="c1"># Default colors</span>
  primary:
    background: <span class="s1">'#15141b'</span>
    foreground: <span class="s1">'#edecee'</span>

  cursor:
    cursor: <span class="s1">'#00D1FF'</span>

  selection:
    text: CellForeground
    background: <span class="s1">'#29263c'</span>

  <span class="c1"># Normal colors</span>
  normal:
    black: <span class="s1">'#110f18'</span>
    red: <span class="s1">'#ff6767'</span>
    green: <span class="s1">'#61ffca'</span>
    yellow: <span class="s1">'#ffca85'</span>
    blue: <span class="s1">'#a277ff'</span>
    magenta: <span class="s1">'#a277ff'</span>
    cyan: <span class="s1">'#61ffca'</span>
    white: <span class="s1">'#edecee'</span>

  <span class="c1"># Bright colors</span>
  bright:
    black: <span class="s1">'#4d4d4d'</span>
    red: <span class="s1">'#ff6767'</span>
    green: <span class="s1">'#61ffca'</span>
    yellow: <span class="s1">'#ffca85'</span>
    blue: <span class="s1">'#a277ff'</span>
    magenta: <span class="s1">'#a277ff'</span>
    cyan: <span class="s1">'#61ffca'</span>
    white: <span class="s1">'#edecee'</span>

  search:
    matches:
      foreground: <span class="s1">'#000000'</span>
      background: <span class="s1">'#ffffff'</span>
    focused_match:
      foreground: <span class="s1">'#ffffff'</span>
      background: <span class="s1">'#00D1FF'</span>

<span class="c1"># 设置字体</span>
font:
  normal:
    family: <span class="s1">'JetBrains Mono'</span>
    style: Regular
  bold:
    family: <span class="s1">'JetBrains Mono'</span>
    style: Regular
  italic:
    family: <span class="s1">'JetBrains Mono'</span>
    style: Italic
  bold_italic:
    family: <span class="s1">'JetBrains Mono'</span>
    style: Italic

  <span class="c1"># 字大小</span>
  size: <span class="m">8</span>

  offset:
    x: <span class="m">0</span>
    y: <span class="m">1</span>
  glyph_offset:
    x: <span class="m">0</span>
    y: <span class="m">1</span>

window:
  padding:
    x: <span class="m">22</span>
    y: <span class="m">22</span>
  decorations: transparent
  dimensions:
    columns: <span class="m">80</span>
    lines: <span class="m">25</span>

scrolling:
  <span class="c1"># 回滚缓冲区中的最大行数,指定“0”将禁用滚动。</span>
  history: <span class="m">100000</span>
  <span class="c1"># 滚动行数</span>
  multiplier: <span class="m">4</span>

cursor:
  style:
    shape: Beam

<span class="c1"># 如果为‘true’，则使用亮色变体绘制粗体文本。</span>
draw_bold_text_with_bright_colors: <span class="nb">false</span>

selection:
  semantic_escape_chars: <span class="s1">',│`|:"'' ()[]{}&lt;&gt;'</span>
  save_to_clipboard: <span class="nb">true</span>

live_config_reload: <span class="nb">true</span>

key_bindings:
  - <span class="o">{</span> key: R, mods: Command, mode: ~Vi<span class="p">|</span>~Search, chars: <span class="s2">"\x0c"</span> <span class="o">}</span>
  - <span class="o">{</span> key: R, mods: Command, mode: ~Vi<span class="p">|</span>~Search, action: ClearHistory <span class="o">}</span>
  - <span class="o">{</span> key: W, mods: Command, action: Hide <span class="o">}</span>
  - <span class="o">{</span> key: W, mods: Command<span class="p">|</span>Shift, action: Quit <span class="o">}</span>
  - <span class="o">{</span> key: N, mods: Command, action: SpawnNewInstance <span class="o">}</span>
  - <span class="o">{</span> key: T, mods: Command, action: CreateNewWindow <span class="o">}</span>
  - <span class="o">{</span> key: Left, mods: Alt, chars: <span class="s2">"\x1bb"</span> <span class="o">}</span> <span class="c1"># Skip word left</span>
  - <span class="o">{</span> key: Right, mods: Alt, chars: <span class="s2">"\x1bf"</span> <span class="o">}</span> <span class="c1"># Skip word right</span>
  - <span class="o">{</span> key: Left, mods: Command, chars: <span class="s2">"\x01"</span> <span class="o">}</span> <span class="c1"># Home</span>
  - <span class="o">{</span> key: Right, mods: Command, chars: <span class="s2">"\x05"</span> <span class="o">}</span> <span class="c1"># End</span>
  - <span class="o">{</span> key: Back, mods: Command, chars: <span class="s2">"\x15"</span> <span class="o">}</span> <span class="c1"># Delete line</span>
  - <span class="o">{</span> key: Back, mods: Alt, chars: <span class="s2">"\x1b\x7f"</span> <span class="o">}</span> <span class="c1"># Delete word</span>
</code></pre>
</div>
<h3 id="h_704256164_12" data-into-catalog-status="">Ranger</h3>
<div class="highlight">
<pre><code class="language-text">输入：ranger --copy-config=all</code></pre>
</div>
<p data-pid="Kc33p7WC">在./home/username/.config/ranger/rc.conf中可以调整字体的大小</p>
<h3 id="h_704256164_13" data-into-catalog-status="">Redshift</h3>
<p data-pid="DbbVHV40">在./home/username/.config目录下新建redshift.conf</p>
<p data-pid="UX-Jm_6s">下面是我的配置文件：</p>
<div class="highlight">
<pre><code class="language-text">; Global settings for redshift
[redshift]
; Set the day and night screen temperatures
temp-day=5000
temp-night=3500
 
; Enable/Disable a smooth transition between day and night
; 0 will cause a direct change from day to night screen temperature.
; 1 will gradually increase or decrease the screen temperature.
transition=1
 
; Set the screen brightness. Default is 1.0.
;brightness=0.9
; It is also possible to use different settings for day and night
; since version 1.8.
;brightness-day=0.7
;brightness-night=0.4
; Set the screen gamma (for all colors, or each color channel
; individually)
gamma=0.8
;gamma=0.8:0.7:0.8
; This can also be set individually for day and night since
; version 1.10.
;gamma-day=0.8:0.7:0.8
;gamma-night=0.6
 
; Set the location-provider: geoclue, geoclue2, manual
; type redshift -l list to see possible values.
; The location provider settings are in a different section.
location-provider=manual
 
; Set the adjustment-method: randr, vidmode
; type redshift -m list to see all possible values.
; randr is the preferred method, vidmode is an older API.
; but works in some cases when randr does not.
; The adjustment method settings are in a different section.
adjustment-method=randr
 
; Configuration of the location-provider:
; type redshift -l PROVIDER:help to see the settings.
; ex: redshift -l manual:help
; Keep in mind that longitudes west of Greenwich (e.g. the Americas)
; are negative numbers.
[manual]
lat=22.5
lon=88.3
 
; Configuration of the adjustment-method
; type redshift -m METHOD:help to see the settings.
; ex: redshift -m randr:help
; In this example, randr is configured to adjust screen 1.
; Note that the numbering starts from 0, so this is actually the
; second screen. If this option is not specified, Redshift will try
; to adjust _all_ screens.
[randr]
screen=0
</code></pre>
</div>
<h3 id="h_704256164_14" data-into-catalog-status="">Vim</h3>
<p data-pid="67xYnHH3">在./home/uername目录下新建.vimrc文件</p>
<p data-pid="Pf_bXiLV">下面是我的配置文件：</p>
<pre class="highlight"><code class="language-text">"set whichwrap+=&lt;,&gt;,h,l   " 允许backspace和光标键跨越行边界(不建议)  

"set scrolloff=3     " 光标移动到buffer的顶部和底部时保持3行距离  

set novisualbell    " 不要闪烁(不明白)  

set statusline=%F%m%r%h%w\ [FORMAT=%{&amp;ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}   "状态行显示的内容  

set laststatus=1    " 启动显示状态行(1),总是显示状态行(2)  

set foldenable      " 允许折叠  

set foldmethod=manual   " 手动折叠  

"set background=dark "背景使用黑色 

set nocompatible  "去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限  

" 显示中文帮助

if version &gt;= 603

    set helplang=cn

    set encoding=utf-8

endif

" 设置配色方案

"colorscheme murphy

"字体 

"if (has("gui_running")) 

"   set guifont=Bitstream\ Vera\ Sans\ Mono\ 10 

"endif 


 
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936

set termencoding=utf-8

set encoding=utf-8

set fileencodings=ucs-bom,utf-8,cp936

set fileencoding=utf-8



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""新文件标题""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"新建.c,.h,.sh,.java文件，自动插入文件头 

autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec ":call SetTitle()" 

""定义函数SetTitle，自动插入文件头 

func SetTitle() 

    "如果文件类型为.sh文件 

    if &amp;filetype == 'sh' 

        call setline(1,"\#########################################################################") 

        call append(line("."), "\# File Name: ".expand("%")) 

        call append(line(".")+1, "\# Author: ma6174") 

        call append(line(".")+2, "\# mail: ma6174@163.com") 

        call append(line(".")+3, "\# Created Time: ".strftime("%c")) 

        call append(line(".")+4, "\#########################################################################") 

        call append(line(".")+5, "\#!/bin/bash") 

        call append(line(".")+6, "") 

    else 

        call setline(1, "/*************************************************************************") 

        call append(line("."), "    &gt; File Name: ".expand("%")) 

        call append(line(".")+1, "    &gt; Author: ma6174") 

        call append(line(".")+2, "    &gt; Mail: ma6174@163.com ") 

        call append(line(".")+3, "    &gt; Created Time: ".strftime("%c")) 

        call append(line(".")+4, " ************************************************************************/") 

        call append(line(".")+5, "")

    endif

    if &amp;filetype == 'cpp'

        call append(line(".")+6, "#include&lt;iostream&gt;")

        call append(line(".")+7, "using namespace std;")

        call append(line(".")+8, "")

    endif

    if &amp;filetype == 'c'

        call append(line(".")+6, "#include&lt;stdio.h&gt;")

        call append(line(".")+7, "")

    endif

    "新建文件后，自动定位到文件末尾

    autocmd BufNewFile * normal G

endfunc 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"键盘命令

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



nmap &lt;leader&gt;w :w!&lt;cr&gt;

nmap &lt;leader&gt;f :find&lt;cr&gt;



" 映射全选+复制 ctrl+a

map &lt;C-A&gt; ggVGY

map! &lt;C-A&gt; &lt;Esc&gt;ggVGY

map &lt;F12&gt; gg=G

" 选中状态下 Ctrl+c 复制

vmap &lt;C-c&gt; "+y

"去空行  

nnoremap &lt;F2&gt; :g/^\s*$/d&lt;CR&gt; 

"比较文件  

nnoremap &lt;C-F2&gt; :vert diffsplit 

"新建标签  

map &lt;M-F2&gt; :tabnew&lt;CR&gt;  

"列出当前目录文件  

map &lt;F3&gt; :Explore&lt;CR&gt;
map &lt;S-F3&gt; :Vexplore&lt;CR&gt;
map &lt;C-F3&gt; :Sexplore&lt;CR&gt;  

imap jk &lt;Esc&gt;

nmap &lt;space&gt; :

"C，C++ 按F5编译运行

map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;

func! CompileRunGcc()

    exec "w"

    if &amp;filetype == 'c'

        exec "!g++ % -o %&lt;"

        exec "! ./%&lt;"

    elseif &amp;filetype == 'cpp'

        exec "!g++ % -o %&lt;"

        exec "! ./%&lt;"

    elseif &amp;filetype == 'java' 

        exec "!javac %" 

        exec "!java %&lt;"

    elseif &amp;filetype == 'sh'

        :!./%

    endif

endfunc

"C,C++的调试

map &lt;F8&gt; :call Rungdb()&lt;CR&gt;

func! Rungdb()

    exec "w"

    exec "!g++ % -g -o %&lt;"

    exec "!gdb ./%&lt;"

endfunc

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""实用设置

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 设置当文件被改动时自动载入

set autoread

" quickfix模式

autocmd FileType c,cpp map &lt;buffer&gt; &lt;leader&gt;&lt;space&gt; :w&lt;cr&gt;:make&lt;cr&gt;

"代码补全 

set completeopt=preview,menu 

"允许插件  

filetype plugin on

"共享剪贴板  

set clipboard+=unnamed 

"从不备份  

set nobackup

"make 运行

:set makeprg=g++\ -Wall\ \ %

"自动保存

set autowrite

set ruler                   " 打开状态栏标尺

set cursorline              " 突出显示当前行

set magic                   " 设置魔术

set guioptions-=T           " 隐藏工具栏

set guioptions-=m           " 隐藏菜单栏

"set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&amp;fileformat}\ %{&amp;encoding}\ %c:%l/%L%)\

" 设置在状态行显示的信息

set foldcolumn=0

set foldmethod=indent 

set foldlevel=3 

set foldenable              " 开始折叠

" 不要使用vi的键盘模式，而是vim自己的

set nocompatible

" 语法高亮

set syntax=on

" 去掉输入错误的提示声音

set noeb

" 在处理未保存或只读文件的时候，弹出确认

set confirm

" 自动缩进

set autoindent

set cindent

" Tab键的宽度

set tabstop=4

" 统一缩进为4

set softtabstop=4

set shiftwidth=4

" 不要用空格代替制表符

set noexpandtab

" 在行和段开始处使用制表符

set smarttab

" 显示行号

set number

" 历史记录数

set history=1000

"禁止生成临时文件

set nobackup

set noswapfile

"搜索忽略大小写

set ignorecase

"搜索逐字符高亮

set hlsearch

set incsearch

"行内替换

set gdefault

"编码设置

set enc=utf-8

set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936

"语言设置

set langmenu=zh_CN.UTF-8

set helplang=cn

" 我的状态行显示的内容（包括文件类型和解码）

"set statusline=%F%m%r%h%w\ [FORMAT=%{&amp;ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}

"set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]

" 总是显示状态行

set laststatus=2

" 命令行（在状态行下）的高度，默认为1，这里是2

set cmdheight=2

" 侦测文件类型

filetype on

" 载入文件类型插件

filetype plugin on

" 为特定文件类型载入相关缩进文件

filetype indent on

" 保存全局变量

set viminfo+=!

" 带有如下符号的单词不要被换行分割

set iskeyword+=_,$,@,%,#,-

" 字符间插入的像素行数目

set linespace=0

" 增强模式中的命令行自动完成操作

set wildmenu

" 使回格键（backspace）正常处理indent, eol, start等

set backspace=2

" 允许backspace和光标键跨越行边界

set whichwrap+=&lt;,&gt;,h,l

" 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）

set mouse=a

set selection=exclusive

set selectmode=mouse,key

" 通过使用: commands命令，告诉我们文件的哪一行被改变过

set report=0

" 在被分割的窗口间显示空白，便于阅读

set fillchars=vert:\ ,stl:\ ,stlnc:\

" 高亮显示匹配的括号

set showmatch

" 匹配括号高亮的时间（单位是十分之一秒）

set matchtime=1

" 光标移动到buffer的顶部和底部时保持3行距离

set scrolloff=3

" 为C程序提供自动缩进

set smartindent

" 高亮显示普通txt文件（需要txt.vim脚本）

au BufRead,BufNewFile *  setfiletype txt

"自动补全

:inoremap ( ()&lt;ESC&gt;i

:inoremap ) &lt;c-r&gt;=ClosePair(')')&lt;CR&gt;

:inoremap { {&lt;CR&gt;}&lt;ESC&gt;O

:inoremap } &lt;c-r&gt;=ClosePair('}')&lt;CR&gt;

:inoremap [ []&lt;ESC&gt;i

:inoremap ] &lt;c-r&gt;=ClosePair(']')&lt;CR&gt;

:inoremap " ""&lt;ESC&gt;i

:inoremap ' ''&lt;ESC&gt;i

function! ClosePair(char)

    if getline('.')[col('.') - 1] == a:char

        return "\&lt;Right&gt;"

    else

        return a:char

    endif

endfunction

filetype plugin indent on 

"打开文件类型检测, 加了这句才可以用智能补全

set completeopt=longest,menu

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" CTags的设定  

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let Tlist_Sort_Type = "name"    " 按照名称排序  

let Tlist_Use_Right_Window = 1  " 在右侧显示窗口  

let Tlist_Compart_Format = 1    " 压缩方式  

let Tlist_Exist_OnlyWindow = 1  " 如果只有一个buffer，kill窗口也kill掉buffer  

let Tlist_File_Fold_Auto_Close = 0  " 不要关闭其他文件的tags  

let Tlist_Enable_Fold_Column = 0    " 不要显示折叠树  

autocmd FileType java set tags+=D:\tools\java\tags  

"autocmd FileType h,cpp,cc,c set tags+=D:\tools\cpp\tags  

"let Tlist_Show_One_File=1            "不同时显示多个文件的tag，只显示当前文件的

"设置tags  

set tags=tags  

"set autochdir 



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"其他东东

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"默认打开Taglist 

let Tlist_Auto_Open=1 

"""""""""""""""""""""""""""""" 

" Tag list (ctags) 

"""""""""""""""""""""""""""""""" 

let Tlist_Ctags_Cmd = '/usr/bin/ctags' 

let Tlist_Show_One_File = 1 "不同时显示多个文件的tag，只显示当前文件的 

let Tlist_Exit_OnlyWindow = 1 "如果taglist窗口是最后一个窗口，则退出vim 

let Tlist_Use_Right_Window = 1 "在右侧窗口中显示taglist窗口

" minibufexpl插件的一般设置

let g:miniBufExplMapWindowNavVim = 1

let g:miniBufExplMapWindowNavArrows = 1

let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1

syntax on</code></pre>
<div>
<figure class="Editable-styled"  data-block="true" data-editor="4afeu" data-offset-key="a0fv1-0-0">
<div class="Editable-divider FocusPlugin--unfocused"><hr></div>
</figure>
</div>
<div>
<h2 id="h_704256164_8" data-into-catalog-status="">安装后软件安装</h2>
<h3 id="h_704256164_9" data-into-catalog-status="">浏览器安装</h3>
<p data-pid="-B5kcozQ">我是直接终端下载Chrome的deb安装包安装</p>
<div class="highlight">
<pre><code class="language-text">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</code></pre>
</div>
<p data-pid="YRSkGn_s">然后本地安装</p>
<div class="highlight">
<pre><code class="language-text">sudo apt install google*.deb</code></pre>
</div>
<h3 id="h_704256164_10" data-into-catalog-status="">spark store安装</h3>
<p data-pid="o-WyswGs">打开浏览器并访问其官网或<a href="https://www.spark-app.store/download" target="_blank" rel="nofollow noopener noreferrer">点此下载安装包</a>（注意自己CPU的指令集）</p>
<p data-pid="nqfLTfEa">然后打开终端</p>
<div class="highlight">
<pre><code class="language-text">cd ./Download
sudo apt install spark*.deb</code></pre>
</div>
<p data-pid="IQoakYrE">随后使用Mod+D即可找到星火商店。</p>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
</feed>
