<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>XYZ</title>
    <link href="https://xyz-fbw.github.io/feed.xml" rel="self" />
    <link href="https://xyz-fbw.github.io" />
    <updated>2024-11-10T01:14:02+08:00</updated>
    <author>
        <name>XYZ</name>
    </author>
    <id>https://xyz-fbw.github.io</id>

    <entry>
        <title>环境变量</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/huan-jing-bian-liang.html"/>
        <id>https://xyz-fbw.github.io/huan-jing-bian-liang.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/4/Screenshot_20241109_233003.png" medium="image" />
            <category term="Linux探索记录"/>

        <updated>2024-11-09T23:26:19+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/4/Screenshot_20241109_233003.png" alt="" />
                    问题描述 使用Fedora的时候需要使用flatpak进行部分应用的扩展，例如QQ和微信，但是我的系统是英文的（单纯电脑显示器分辨率不够，看中文没有手机效果好，干脆换成英文），导致很多flatpak中的中文应用出现字体问题 更改环境变量为中文简体即可 sudo flatpak override --env=LC_ALL=zh_CN.UTF-8
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/4/Screenshot_20241109_233003.png" class="type:primaryImage" alt="" /></p>
                <h1 id="问题描述">问题描述</h1>
<p>使用Fedora的时候需要使用flatpak进行部分应用的扩展，例如QQ和微信，但是我的系统是英文的（单纯电脑显示器分辨率不够，看中文没有手机效果好，干脆换成英文），导致很多flatpak中的中文应用出现字体问题</p><h1 id="解决方法">解决方法</h1>
<p>更改环境变量为中文简体即可</p><p><code>sudo flatpak override --env=LC_ALL=zh_CN.UTF-8</code></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Linux省电配置——TLP</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/linuxsheng-dian-pei-zhi-tlp.html"/>
        <id>https://xyz-fbw.github.io/linuxsheng-dian-pei-zhi-tlp.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/3/Ping-Mu-Jie-Tu_20241105_220518.jpg" medium="image" />
            <category term="Linux探索记录"/>

        <updated>2024-11-05T22:03:20+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/3/Ping-Mu-Jie-Tu_20241105_220518.jpg" alt="" />
                    安装 Debian/Ubuntu： sudo apt install tlp tlp-rdw Fedora/RHEL： sudo dnf install tlp&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/3/Ping-Mu-Jie-Tu_20241105_220518.jpg" class="type:primaryImage" alt="" /></p>
                <h2 id="安装">安装</h2>
<p><strong>Debian/Ubuntu：</strong></p><p><code>sudo apt install tlp tlp-rdw</code></p><p><strong>Fedora/RHEL：</strong></p><p><code>sudo dnf install tlp tlp-rdw</code></p><p><strong>Arch/Manjaro：</strong></p><p><code>sudo pacman -S tlp tlp-rdw</code></p><h2 id="配置">配置</h2>
<h3 id="启动">启动</h3>
<p>启动tlp程序</p><p><code>systemctl start tlp</code></p><p><code>systemctl enable tlp</code></p><p>如果安装了tlp-rdw，可以开启网络的节能</p><p><code>systemctl start NetworkManager-dispatcher</code></p><p><code>systemctl enable NetworkManager-dispatcher</code></p><p>这个时候需要禁用一个套接字和服务（冲突）</p><p><code>systemctl mask systemd-rfkill.socket systemd-rfkill.service</code></p><h3 id="配置文件">配置文件</h3>
<h4 id="配置文件位置在etctlpconf，因为版本不同会有配置文件差异，这里不做个人配置文件展示">配置文件位置在/etc/tlp.conf，因为版本不同会有配置文件差异，这里不做个人配置文件展示</h4>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Fedora Linux 41 &amp; KDE Plasma 6.2.2</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/fedora-41andkde-plasma-622.html"/>
        <id>https://xyz-fbw.github.io/fedora-41andkde-plasma-622.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/2/KDEandFedora.jpg" medium="image" />
            <category term="Linux探索记录"/>

        <updated>2024-11-04T20:28:41+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/2/KDEandFedora.jpg" alt="" />
                    Fedora Linux 41 Fedora 41这个系统我已经使用了将近4天的时间，加上之前也零零散散用过不少时间，也对这个系统有一定的了解了，下面就来分享一下我的一些见解。 首先从客观的角度来讲，Fedora确实并不算是一个稳定的系统，就在我使用的这一段时间内，系统内核就已经升级了3个，虽然不像Arch Linux那样更新的那么频繁，但是与Ubuntu和Debian相比还是激进了不少，所以在安装完成更新之后可以养成及时清理内核的好习惯，但是最好在此内核使用没什么问题的情况下再进行删除，以系统无法启动而造成数据丢失。 dnf包管理器是我最喜欢的包管理器，经常使用Ubuntu/Debian的人知道apt，但是apt没有办法在卸载一个软件包的时候（输入：sudo apt remove xxxxx的时候）同时卸载它的所有依赖包。 Arch的pacman和Manjaro的pamac相对来说会好很多，但是pacman提供的选项太宽泛了——pacman&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/2/KDEandFedora.jpg" class="type:primaryImage" alt="" /></p>
                <h1>Fedora Linux 41</h1>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/2/Guan-Yu-Xi-Tong-2.avif" alt="" width="1062" height="809"></figure>
<p>Fedora 41这个系统我已经使用了将近4天的时间，加上之前也零零散散用过不少时间，也对这个系统有一定的了解了，下面就来分享一下我的一些见解。</p>
<p>首先从客观的角度来讲，Fedora确实并不算是一个稳定的系统，就在我使用的这一段时间内，系统内核就已经升级了3个，虽然不像Arch Linux那样更新的那么频繁，但是与Ubuntu和Debian相比还是激进了不少，所以在安装完成更新之后可以养成及时清理内核的好习惯，但是最好在此内核使用没什么问题的情况下再进行删除，以系统无法启动而造成数据丢失。</p>
<p>dnf包管理器是我最喜欢的包管理器，经常使用Ubuntu/Debian的人知道apt，但是apt没有办法在卸载一个软件包的时候（输入：sudo apt remove xxxxx的时候）同时卸载它的所有依赖包。</p>
<p>Arch的pacman和Manjaro的pamac相对来说会好很多，但是pacman提供的选项太宽泛了——pacman -R是直接卸载软件包和依赖项，但是如果是想要卸载单个软件包就需要用pacman -Rs了。pamac是Manjaro的包管理器，相比pacman的更新节奏会更稳定一些，但是不管是什么Arch的发行版想要使用国内的软件，例如QQ，微信，WPS，QQ音乐等等软件都离不开yay，一个go语言写的包管理器，这样下来包管理器就有3个，使用起来其实还是很不方便的。</p>
<p>dnf就不一样，这个包管理器十分方便——debian在更新的时候需要输入两个命令才可以更新（sudo apt update和sudo apt upgrade），但是dnf只需要sudo dnf update就可以了。如果需要使用国内的应用，直接安装flatpak就可以了，这还只是一个沙盒而已，十分方便。</p>
<p> </p>
<h1>KDE Plasma 6.2.2</h1>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/2/Zhuo-Mian-Jie-Tu.avif" alt="" width="1924" height="1080"></figure>
<p>这是我的KDE桌面环境。当然，这肯定不是默认的了。</p>
<p>编辑桌面还是非常有说的，先看下图的编辑画面：</p>
<figure class="post__image"><img loading="lazy"  src="https://xyz-fbw.github.io/media/posts/2/Bian-Ji-Zhuo-Mian.avif" alt="" width="1916" height="1080"></figure>
<p>这个编辑画面还是非常适合普通大众进行使用的，整体更改面板位置的设置更加简洁，重点的设置突出，归类也更佳明确。</p>
<p><strong>如果有笔记本电脑的分辨率像我一样还没到1080P的，那确实可以试试KDE，绝对不会失望的，图形的协调性方面比Gnome好了不知道多少倍</strong></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>高中小高考Python复习提纲</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html"/>
        <id>https://xyz-fbw.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg" medium="image" />
            <category term="学习笔记"/>

        <updated>2024-11-03T20:48:51+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg" alt="" />
                    程序运行逻辑 在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。 示例程序： def output(): print(&quot;Hello&quot;) return output() 执行结果： Hello 程序分析： def为用户定义函数。Python模糊主函数概念，用户定义函数在定义之后才可引用。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg" class="type:primaryImage" alt="" /></p>
                <h2 id="程序运行逻辑">程序运行逻辑</h2>
<p>在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。</p><hr>
<p><em><strong>示例程序</strong></em>：</p><pre><code class="language-python">def output():
    print(&quot;Hello&quot;)
    return

output()
</code></pre>
<p>执行结果：</p><pre><code class="language-python">Hello
</code></pre>
<hr>
<p><em><strong>程序分析</strong></em>：</p><p><strong>def为用户定义函数</strong>。<strong>Python模糊主函数概念</strong>，用户定义函数在定义之后才可引用。</p><h2 id="输出hello-worldprint函数">输出Hello World——Print函数</h2>
<p><em><strong>示例程序</strong></em></p><pre><code class="language-python">print(&quot;Hello&quot;)
</code></pre>
<p>执行结果：</p><pre><code class="language-python">Hello
</code></pre>
<hr>
<p><em><strong>程序分析</strong></em></p><p><strong>print</strong>，打印函数，用于输出字符，数据变量等信息  <em>弱化int，char等变量</em></p><hr>
<p><strong>Print函数语法格式</strong></p><p>输出规定字符，文字等内容</p><pre><code class="language-python">print(&quot;Hello&quot;)
print(&quot;12345&quot;)
print(&quot;你好&quot;)
</code></pre>
<p>输出变量值等内容</p><pre><code class="language-python">x = 10
print(x)
</code></pre>
<p><strong>混合一下</strong>（输出输入的值——input函数）</p><pre><code class="language-python">x = input(&quot;Please input a number&quot;)
print(&quot;Your input number is&quot;,x)
</code></pre>
<hr>
<h2 id="输入字符，数字等input函数">输入字符，数字等——input函数</h2>
<p><em><strong>示例程序</strong></em></p><pre><code class="language-python">x = input(&quot;Please input&quot;)
print(&quot;Your input is&quot;,x)
</code></pre>
<p><em><strong>程序分析</strong></em></p><ol>
<li>程序运行逻辑是本身为主函数（Python中不强调主函数概念——既可以面向对象又可以面向过程）</li>
<li>无需分析输入的数值类型（Python中弱化int char等概念）</li>
</ol>
<hr>
<h2 id="判断语句ifelse">判断语句——if……else……</h2>
<p><em><strong>示例程序</strong></em></p><p><strong>标准语句</strong></p><pre><code class="language-python">x = input(&quot;Please input a number&quot;)
if x == 1:
    print(&quot;You are right&quot;)
else:
    print(&quot;Maybe there is something Wrong&quot;)
</code></pre>
<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><strong>添加elif</strong></p><pre><code class="language-python">x = input(&quot;Please input a number&quot;)
if x == 1:
    print(&quot;You are right&quot;)
elif x == 2:
    print(&quot;Maybe you are right&quot;)
else:
    print(&quot;Maybe there is something Wrong&quot;)
</code></pre>
<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><code>输入2：输出 Maybe you are right</code></p><p><em><strong>程序解读</strong></em></p><p>程序的运行方式</p><ul>
<li>满足if的条件，执行下方内容</li>
<li>不满足if,但是满足elif,执行elif，执行elif下方语句</li>
<li>不满足，执行else下方内容</li>
</ul>
<p><em><strong>语句语法格式</strong></em></p><pre><code class="language-python">if 判断条件:
    执行内容
elif 判断条件:
    执行内容
else:
    执行内容
</code></pre>
<hr>
<h2 id="重复执行语句while">重复执行语句——while……</h2>
<p><em><strong>示例程序</strong></em></p><pre><code class="language-python">x = 0

while x != 1:
    x = input(&quot;input a number&quot;)
    print(x)

print(&quot;right&quot;)
</code></pre>
<p><em><strong>程序解读</strong></em></p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：重新输入</code></p><p><em><strong>语句语法格式</strong></em></p><pre><code class="language-python">while 判断条件(一般为相反):
    执行内容
</code></pre>
<p><strong>提升</strong>
类似do……while……</p><pre><code class="language-python">secret_word = &quot;python&quot;
counter = 0

while True:
    word = input(&quot;Enter the secret word: &quot;).lower()
    counter = counter + 1
    if word == secret_word:
        break
    if word != secret_word and counter &gt; 7: 
        break
</code></pre>

            ]]>
        </content>
    </entry>
</feed>
