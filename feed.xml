<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>XYZ</title>
    <link href="https://xyz-fbw.github.io/feed.xml" rel="self" />
    <link href="https://xyz-fbw.github.io" />
    <updated>2024-11-03T20:54:19+08:00</updated>
    <author>
        <name>XYZ</name>
    </author>
    <id>https://xyz-fbw.github.io</id>

    <entry>
        <title>高中小高考Python复习提纲</title>
        <author>
            <name>XYZ</name>
        </author>
        <link href="https://xyz-fbw.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html"/>
        <id>https://xyz-fbw.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html</id>
        <media:content url="https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg" medium="image" />
            <category term="学习笔记"/>

        <updated>2024-11-03T20:48:51+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg" alt="" />
                    程序运行逻辑 在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。 示例程序： def output(): print(&quot;Hello&quot;) return output() 执行结果： Hello 程序分析： def为用户定义函数。Python模糊主函数概念，用户定义函数在定义之后才可引用。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://xyz-fbw.github.io/media/posts/1/OIP-C.jpeg" class="type:primaryImage" alt="" /></p>
                <h2 id="程序运行逻辑">程序运行逻辑</h2>
<p>在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。</p><hr>
<p><em><strong>示例程序</strong></em>：</p><pre><code class="language-python">def output():
    print(&quot;Hello&quot;)
    return

output()
</code></pre>
<p>执行结果：</p><pre><code class="language-python">Hello
</code></pre>
<hr>
<p><em><strong>程序分析</strong></em>：</p><p><strong>def为用户定义函数</strong>。<strong>Python模糊主函数概念</strong>，用户定义函数在定义之后才可引用。</p><h2 id="输出hello-worldprint函数">输出Hello World——Print函数</h2>
<p><em><strong>示例程序</strong></em></p><pre><code class="language-python">print(&quot;Hello&quot;)
</code></pre>
<p>执行结果：</p><pre><code class="language-python">Hello
</code></pre>
<hr>
<p><em><strong>程序分析</strong></em></p><p><strong>print</strong>，打印函数，用于输出字符，数据变量等信息  <em>弱化int，char等变量</em></p><hr>
<p><strong>Print函数语法格式</strong></p><p>输出规定字符，文字等内容</p><pre><code class="language-python">print(&quot;Hello&quot;)
print(&quot;12345&quot;)
print(&quot;你好&quot;)
</code></pre>
<p>输出变量值等内容</p><pre><code class="language-python">x = 10
print(x)
</code></pre>
<p><strong>混合一下</strong>（输出输入的值——input函数）</p><pre><code class="language-python">x = input(&quot;Please input a number&quot;)
print(&quot;Your input number is&quot;,x)
</code></pre>
<hr>
<h2 id="输入字符，数字等input函数">输入字符，数字等——input函数</h2>
<p><em><strong>示例程序</strong></em></p><pre><code class="language-python">x = input(&quot;Please input&quot;)
print(&quot;Your input is&quot;,x)
</code></pre>
<p><em><strong>程序分析</strong></em></p><ol>
<li>程序运行逻辑是本身为主函数（Python中不强调主函数概念——既可以面向对象又可以面向过程）</li>
<li>无需分析输入的数值类型（Python中弱化int char等概念）</li>
</ol>
<hr>
<h2 id="判断语句ifelse">判断语句——if……else……</h2>
<p><em><strong>示例程序</strong></em></p><p><strong>标准语句</strong></p><pre><code class="language-python">x = input(&quot;Please input a number&quot;)
if x == 1:
    print(&quot;You are right&quot;)
else:
    print(&quot;Maybe there is something Wrong&quot;)
</code></pre>
<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><strong>添加elif</strong></p><pre><code class="language-python">x = input(&quot;Please input a number&quot;)
if x == 1:
    print(&quot;You are right&quot;)
elif x == 2:
    print(&quot;Maybe you are right&quot;)
else:
    print(&quot;Maybe there is something Wrong&quot;)
</code></pre>
<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><code>输入2：输出 Maybe you are right</code></p><p><em><strong>程序解读</strong></em></p><p>程序的运行方式</p><ul>
<li>满足if的条件，执行下方内容</li>
<li>不满足if,但是满足elif,执行elif，执行elif下方语句</li>
<li>不满足，执行else下方内容</li>
</ul>
<p><em><strong>语句语法格式</strong></em></p><pre><code class="language-python">if 判断条件:
    执行内容
elif 判断条件:
    执行内容
else:
    执行内容
</code></pre>
<hr>
<h2 id="重复执行语句while">重复执行语句——while……</h2>
<p><em><strong>示例程序</strong></em></p><pre><code class="language-python">x = 0

while x != 1:
    x = input(&quot;input a number&quot;)
    print(x)

print(&quot;right&quot;)
</code></pre>
<p><em><strong>程序解读</strong></em></p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：重新输入</code></p><p><em><strong>语句语法格式</strong></em></p><pre><code class="language-python">while 判断条件(一般为相反):
    执行内容
</code></pre>
<p><strong>提升</strong>
类似do……while……</p><pre><code class="language-python">secret_word = &quot;python&quot;
counter = 0

while True:
    word = input(&quot;Enter the secret word: &quot;).lower()
    counter = counter + 1
    if word == secret_word:
        break
    if word != secret_word and counter &gt; 7: 
        break
</code></pre>

            ]]>
        </content>
    </entry>
</feed>
